<?xml version="1.0"?>
<launch>
  <!-- Find xacro -->
  <arg name="model" value="$(find robosar_gazebo_sim)/urdf/khepera4_lrf.xacro"/>
  <!-- load our urdf model (string) into global parameter called "robot_description"-->
  <!-- xacro parses xacro files and returns a urdf file -->
  <param name="khepera4_lrf_urdf"
         command="$(find xacro)/xacro $(arg model)" />

  <!-- Run simulator -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find robosar_gazebo_sim)/map/simple_world.world"/>
    <arg name="debug" value="false" />
    <arg name="gui" value="false" />
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="headless" value="false"/>
  </include>

  <!-- Spawn robot(s) -->
  <include file="$(find robosar_gazebo_sim)/launch/spawn_robots.launch" />

  <!-- Run RVIZ -->
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find robosar_gazebo_sim)/config/run_slam_sim.rviz" />

  <!-- Run tag location estimator -->
  <node pkg="robosar_gazebo_sim" type="tag_location_estimator" name="tag_location_estimator" />

  <!-- Pick agent for mapping and teleop -->
  <arg name="agentN" value="agent1" />
  <!-- Run teleop for agent -->
  <node name="teleop_twist_keyboard_$(arg agentN)" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen">
        <remap from="cmd_vel" to="/robosar_agent_bringup_node/$(arg agentN)/cmd_vel"/>
  </node>
  <!-- Run SLAM Toolbox for mapping -->
  <node pkg="slam_toolbox" type="async_slam_toolbox_node" name="slam_toolbox" output="screen">
      <rosparam command="load" file="$(find slam_toolbox)/config/robosar_mapping.yaml" />
      <param name="odom_frame" type="string" value="$(arg agentN)/odom" />
      <param name="base_frame" type="string" value="$(arg agentN)/base_link" />
      <param name="scan_topic" type="string" value="/robosar_agent_bringup_node/$(arg agentN)/feedback/scan" />
      <param name="max_laser_range" type="double" value="4.0" />
  </node>

</launch>


